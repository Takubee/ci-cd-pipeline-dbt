name: dbt CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  dbt-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dbt dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dbt-core dbt-postgres

    - name: Create dbt profiles
      run: |
        mkdir -p ~/.dbt
        cat > ~/.dbt/profiles.yml << EOF
        ci_cd_pipeline_dbt:
          target: dev
          outputs:
            dev:
              type: postgres
              host: \${{ secrets.SUPABASE_HOST }}
              port: \${{ secrets.SUPABASE_PORT }}
              user: \${{ secrets.SUPABASE_USER }}
              pass: \${{ secrets.SUPABASE_PASSWORD }}
              dbname: \${{ secrets.SUPABASE_DATABASE }}
              schema: \${{ secrets.SUPABASE_SCHEMA }}
              threads: 4
        EOF

    - name: Install dbt packages
      run: dbt deps

    - name: Run dbt tests
      run: dbt test

    - name: Run dbt compile
      run: dbt compile

    - name: Run dbt docs generate
      run: dbt docs generate

  dbt-run:
    runs-on: ubuntu-latest
    needs: dbt-test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dbt dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dbt-core dbt-postgres

    - name: Create dbt profiles
      run: |
        mkdir -p ~/.dbt
        cat > ~/.dbt/profiles.yml << EOF
        ci_cd_pipeline_dbt:
          target: prod
          outputs:
            prod:
              type: postgres
              host: \${{ secrets.SUPABASE_HOST }}
              port: \${{ secrets.SUPABASE_PORT }}
              user: \${{ secrets.SUPABASE_USER }}
              pass: \${{ secrets.SUPABASE_PASSWORD }}
              dbname: \${{ secrets.SUPABASE_DATABASE }}
              schema: \${{ secrets.SUPABASE_SCHEMA }}
              threads: 4
        EOF

    - name: Install dbt packages
      run: dbt deps

    - name: Run dbt seed
      run: dbt seed

    - name: Run dbt run
      run: dbt run

    - name: Run dbt test
      run: dbt test

    - name: Run dbt docs generate
      run: dbt docs generate

    - name: Upload dbt artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dbt-artifacts
        path: |
          target/
          logs/

  notify-success:
    runs-on: ubuntu-latest
    needs: dbt-run
    if: github.ref == 'refs/heads/main' && success()
    
    steps:
    - name: Notify success
      run: |
        echo "✅ dbt CI/CD pipeline completed successfully!"
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${{ github.sha }}"
        echo "Author: ${{ github.actor }}"

  notify-failure:
    runs-on: ubuntu-latest
    needs: [dbt-test, dbt-run]
    if: failure()
    
    steps:
    - name: Notify failure
      run: |
        echo "❌ dbt CI/CD pipeline failed!"
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${{ github.sha }}"
        echo "Author: ${{ github.actor }}" 